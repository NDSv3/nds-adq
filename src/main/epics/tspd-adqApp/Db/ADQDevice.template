# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#   Common information about ADQ device   #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(waveform, "$(PREFIX):$(INFO):IPN") {
    field(DESC, "Product name of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn($(PREFIX)-$(INFO), 0) ProductName")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(waveform, "$(PREFIX):$(INFO):ISN") {
    field(DESC, "Serial number of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn($(PREFIX)-$(INFO), 0) SerialNumber")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "$(PREFIX):$(INFO):IPID") {
    field(DESC, "Product ID of the device")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(INFO), 0) ProductID")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "$(PREFIX):$(INFO):ITYPE") {
    field(DESC, "Type of the device")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(INFO), 0) ADQType")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}
    
record(waveform, "$(PREFIX):$(INFO):IOPT") {
    field(DESC, "Option of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn($(PREFIX)-$(INFO), 0) CardOption")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#    Device settings for Channel Group    #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "${PREFIX}:${CHGR}:TRIGMODE") {
    field(DESC, "Set trigger mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0) TriggerMode")
    field(ZRVL, 0)
    field(ZRST, "SW trigger")
    field(ONVL, 1)
    field(ONST, "External trigger")
    field(TWVL, 2)
    field(TWST, "Level trigger")
    field(THVL, 3)
    field(THST, "Internal trigger")
}

record(mbbi, "${PREFIX}:${CHGR}:TRIGMODE-RB") {
    field(DESC, "Trigger mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0) TriggerMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "SW trigger")
    field(ONVL, 1)
    field(ONST, "External trigger")
    field(TWVL, 2)
    field(TWST, "Level trigger")
    field(THVL, 3)
    field(THST, "Internal trigger")
}

record(longout, "$(PREFIX):$(CHGR):ADJUSTBIAS") {
    field(DESC, "Adjusted BIAS")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) AdjustBias")
    field(SCAN, "Passive")
}

record(longin, "$(PREFIX):$(CHGR):ADJUSTBIAS-RB") {
    field(DESC, "Adjusted BIAS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) AdjustBias-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(PREFIX):$(CHGR):DBS-BYPASS") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-Bypass")
    field(SCAN, "Passive")
    field(DRVH, "1")
    field(DRVL, "0")
}

record(longin, "$(PREFIX):$(CHGR):DBS-BYPASS-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-Bypass-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(PREFIX):$(CHGR):DBS-DC") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-DC")
    field(SCAN, "Passive")
}

record(longin, "$(PREFIX):$(CHGR):DBS-DC-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-DC-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(PREFIX):$(CHGR):DBS-LOWSAT") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-LowSat")
    field(SCAN, "Passive")
}

record(longin, "$(PREFIX):$(CHGR):DBS-LOWSAT-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-LowSat-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(PREFIX):$(CHGR):DBS-UPSAT") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-UpSat")
    field(SCAN, "Passive")
}

record(longin, "$(PREFIX):$(CHGR):DBS-UPSAT-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) DBS-UpSat-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(mbbo, "${PREFIX}:${CHGR}:PATTMODE") {
    field(DESC, "Set trigger mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0) PatternMode")
    field(ZRVL, 0)
    field(ZRST, "Normal")
    field(ONVL, 1)
    field(ONST, "Test (x)")
    field(TWVL, 2)
    field(TWST, "Count upwards")
    field(THVL, 3)
    field(THST, "Count downwards")
    field(FRVL, 4)
    field(FRST, "Alternating ups and downs")
}

record(mbbi, "${PREFIX}:${CHGR}:PATTMODE-RB") {
    field(DESC, "Trigger mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0) PatternMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "Normal")
    field(ONVL, 1)
    field(ONST, "Test (x)")
    field(TWVL, 2)
    field(TWST, "Count upwards")
    field(THVL, 3)
    field(THST, "Count downwards")
    field(FRVL, 4)
    field(FRST, "Alternating ups and downs")
}

record(mbbo, "${PREFIX}:${CHGR}:CHANNELS") {
    field(DESC, "Enable channels for DAQ")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0) Channels")
    field(ZRVL, 0)
    field(ZRST, "A+B+C+D")
    field(ONVL, 1)
    field(ONST, "A+B")
    field(TWVL, 2)
    field(TWST, "C+D")
    field(THVL, 3)
    field(THST, "A")
    field(FRVL, 4)
    field(FRST, "B")
    field(FVVL, 5)
    field(FVST, "C")
    field(SXVL, 6)
    field(SXST, "D")
}

record(mbbi, "${PREFIX}:${CHGR}:CHANNELS-RB") {
    field(DESC, "Enable channels for DAQ")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0) Channels-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "A+B+C+D")
    field(ONVL, 1)
    field(ONST, "A+B")
    field(TWVL, 2)
    field(TWST, "C+D")
    field(THVL, 3)
    field(THST, "A")
    field(FRVL, 4)
    field(FRST, "B")
    field(FVVL, 5)
    field(FVST, "C")
    field(SXVL, 6)
    field(SXST, "D")
}

record(waveform, "$(PREFIX):$(CHGR):CHANNELMASK") {
    field(DESC, "Channel mask")
    field(DTYP, "asynInt8ArrayOut")
    field(FTVL, "CHAR")
    field(NELM, 4)
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) ChannelMask")
    field(SCAN, "Passive")
}

record(waveform, "$(PREFIX):$(CHGR):CHANNELMASK-RB") {
    field(DESC, "Channel mask")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 4)
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) ChannelMask-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "$(PREFIX):$(CHGR):MAXSAMP-RB") {
    field(DESC, "Max number of samples")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) MaxSamples-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "$(PREFIX):$(CHGR):NOFREC-RB") {
    field(DESC, "Number of records")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) NofRecords-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(FLNK, "$(PREFIX):$(CHGR):MAXSAMP-RB")
}

record(longout, "$(PREFIX):$(CHGR):NOFREC") {
    field(DESC, "Number of records")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) NofRecords")
    field(SCAN, "Passive")
}

record(longin, "$(PREFIX):$(CHGR):NOFSAMP-RB") {
    field(DESC, "Number of samples")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PREFIX)-$(CHGR), 0) NofSamples-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "$(PREFIX):$(CHGR):NOFSAMP") {
    field(DESC, "Number of samples")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PREFIX)-$(CHGR), 0) NofSamples")
    field(SCAN, "Passive")
}

record(mbbo, "${PREFIX}:${CHGR}:DAQMODE") {
    field(DESC, "Set DAQ mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0) DAQMode")
    field(ZRVL, 0)
    field(ZRST, "Multi-Record")
    field(ONVL, 1)
    field(ONST, "Continuous streaming")
    field(TWVL, 2)
    field(TWST, "Triggered streaming")
}

record(mbbi, "${PREFIX}:${CHGR}:DAQMODE-RB") {
    field(DESC, "DAQ mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0) DAQMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "Multi-Record")
    field(ONVL, 1)
    field(ONST, "Continuous streaming")
    field(TWVL, 2)
    field(TWST, "Triggered streaming")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#     StateMachine for Channel Group      #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "${PREFIX}:${CHGR}:STAT") {
    field(DESC, "Set local state CHGR")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0) StateMachine-setState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
}

record(mbbi, "${PREFIX}:${CHGR}:STAT-RB") {
    field(DESC, "Get local state CHGR")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0) StateMachine-getState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(EISV, "MAJOR")
    field(FLNK, "${STAT_RB_FLNK=}")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#   Data and StateMachine for Channels    #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(waveform, "${PREFIX}:${CHGR}:${CH}:DATA") {
    field(DESC, "Received data")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "UCHAR")
    field(NELM, "2000")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0)${CH}-Data")
    field(TSEL, "${DATA_TSEL=}")
    field(FLNK, "${DATA_FLNK=}")
}

record(mbbo, "${PREFIX}:${CHGR}:${CH}:STAT") {
    field(DESC, "Set local state CH")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${CHGR}, 0)${CH}-StateMachine-setState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
}

record(mbbi, "${PREFIX}:${CHGR}:${CH}:STAT-RB") {
    field(DESC, "Get local state CH")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(INP, "@asyn(${PREFIX}-${CHGR}, 0)${CH}-StateMachine-getState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(EISV, "MAJOR")
}