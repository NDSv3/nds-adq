# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#   Common information about ADQ device   #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(waveform, "${PREFIX}:${INFO}:PRODNAME") {
    field(DESC, "Product name of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) ProductName")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(waveform, "${PREFIX}:${INFO}:PRODSERNUM") {
    field(DESC, "Serial number of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) SerialNumber")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:PRODID") {
    field(DESC, "Product ID of the device")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) ProductID")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:PRODTYPE") {
    field(DESC, "Type of the device")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) ADQType")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}
    
record(waveform, "${PREFIX}:${INFO}:PRODOPT") {
    field(DESC, "Option of the device")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 32)
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) CardOption")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:TEMP-0") {
    field(DESC, "Temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) TemperatureLocal")
    field(SCAN, "1 second")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:TEMP-1") {
    field(DESC, "Temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) TemperatureADC-1")
    field(SCAN, "1 second")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:TEMP-2") {
    field(DESC, "Temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) TemperatureADC-2")
    field(SCAN, "1 second")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:TEMP-3") {
    field(DESC, "Temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) TemperatureFPGA")
    field(SCAN, "1 second")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${INFO}:TEMP-4") {
    field(DESC, "Temperature")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${INFO}, 0) TemperatureDiode")
    field(SCAN, "1 second")
    field(PINI, "YES")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#    Device settings for Channel Group    #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

# # # # # # # # # # # # # # # # # # # # # #
#            Common settings              #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "${PREFIX}:${DEV}:${GRP}:DAQMODE") {
    field(DESC, "Set DAQ mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DAQMode")
    field(ZRVL, 0)
    field(ZRST, "Multi-Record")
    field(ONVL, 1)
    field(ONST, "Continuous streaming")
    field(TWVL, 2)
    field(TWST, "Triggered streaming")
}

record(mbbi, "${PREFIX}:${DEV}:${GRP}:DAQMODE-RB") {
    field(DESC, "DAQ mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DAQMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "Multi-Record")
    field(ONVL, 1)
    field(ONST, "Continuous streaming")
    field(TWVL, 2)
    field(TWST, "Triggered streaming")
}

record(mbbo, "${PREFIX}:${DEV}:${GRP}:TRIGMODE") {
    field(DESC, "Set trigger mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) TrigMode")
    field(ZRVL, 0)
    field(ZRST, "SW trigger")
    field(ONVL, 1)
    field(ONST, "External trigger")
    field(TWVL, 2)
    field(TWST, "Level trigger")
    field(THVL, 3)
    field(THST, "Internal trigger")
}

record(mbbi, "${PREFIX}:${DEV}:${GRP}:TRIGMODE-RB") {
    field(DESC, "Trigger mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) TrigMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "SW trigger")
    field(ONVL, 1)
    field(ONST, "External trigger")
    field(TWVL, 2)
    field(TWST, "Level trigger")
    field(THVL, 3)
    field(THST, "Internal trigger")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:DCBIAS") {
    field(DESC, "Adjusted BIAS")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DCBias")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:DCBIAS-RB") {
    field(DESC, "Adjusted BIAS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DCBias-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:DBSBYPASS") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSBypass")
    field(SCAN, "Passive")
    field(DRVH, "1")
    field(DRVL, "0")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:DBSBYPASS-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSBypass-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:DBSDC") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSDC")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:DBSDC-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSDC-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:DBSLOWSAT") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSLowSat")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:DBSLOWSAT-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSLowSat-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:DBSUPSAT") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSUpSat")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:DBSUPSAT-RB") {
    field(DESC, "DBS settings")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) DBSUpSat-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(mbbo, "${PREFIX}:${DEV}:${GRP}:PATTERNMODE") {
    field(DESC, "Set trigger mode")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) PatternMode")
    field(ZRVL, 0)
    field(ZRST, "Normal")
    field(ONVL, 1)
    field(ONST, "Test (x)")
    field(TWVL, 2)
    field(TWST, "Count upwards")
    field(THVL, 3)
    field(THST, "Count downwards")
    field(FRVL, 4)
    field(FRST, "Alternating ups and downs")
}

record(mbbi, "${PREFIX}:${DEV}:${GRP}:PATTERNMODE-RB") {
    field(DESC, "Trigger mode readback")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) PatternMode-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "Normal")
    field(ONVL, 1)
    field(ONST, "Test (x)")
    field(TWVL, 2)
    field(TWST, "Count upwards")
    field(THVL, 3)
    field(THST, "Count downwards")
    field(FRVL, 4)
    field(FRST, "Alternating ups and downs")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:SAMPCNTMAX-RB") {
    field(DESC, "Max number of samples")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) SampleCntMax-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:RECORDCNT-RB") {
    field(DESC, "Number of records")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) RecordCnt-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:RECORDCNT") {
    field(DESC, "Number of records")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) RecordCnt")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:SAMPCNT-RB") {
    field(DESC, "Number of samples")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) SampleCnt-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:SAMPCNT") {
    field(DESC, "Number of samples")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) SampleCnt")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:SAMPCNTTOTAL-RB") {
    field(DESC, "Number of records")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) SampleCntTotal-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longin, "${PREFIX}:${DEV}:${GRP}:RECORDCNTCOLLECT-RB") {
    field(DESC, "Records to collect")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) RecordCntCollect-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(FLNK, "${PREFIX}:${DEV}:${GRP}:SAMPCNTMAX-RB")
}

record(longout, "${PREFIX}:${DEV}:${GRP}:RECORDCNTCOLLECT") {
    field(DESC, "Records to collect")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}-${GRP}, 0) RecordCntCollect")
    field(SCAN, "Passive")
}

# # # # # # # # # # # # # # # # # # # # # #
#        ADQ device specific PVs          #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "${PREFIX}:${DEV}:CHANACTIVE") {
    field(DESC, "Enable channels for DAQ")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}, 0) ChanActive")
    field(ZRVL, 0)
    field(THST, "A")
    field(ONVL, 1)
    field(FRST, "B")
    field(TWVL, 2)
    field(FVST, "C")
    field(THVL, 3)
    field(SXST, "D")
    field(FRVL, 4)
    field(ONST, "A+B")
    field(FVVL, 5)
    field(TWST, "C+D")
    field(SXVL, 6)
    field(ZRST, "A+B+C+D")
}

record(mbbi, "${PREFIX}:${DEV}:CHANACTIVE-RB") {
    field(DESC, "Enable channels for DAQ")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(INP, "@asyn(${PREFIX}-${DEV}, 0) ChanActive-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(THST, "A")
    field(ONVL, 1)
    field(FRST, "B")
    field(TWVL, 2)
    field(FVST, "C")
    field(THVL, 3)
    field(SXST, "D")
    field(FRVL, 4)
    field(ONST, "A+B")
    field(FVVL, 5)
    field(TWST, "C+D")
    field(SXVL, 6)
    field(ZRST, "A+B+C+D")
}

record(waveform, "${PREFIX}:${DEV}:CHANMASK") {
    field(DESC, "Channel mask")
    field(DTYP, "asynInt8ArrayOut")
    field(FTVL, "CHAR")
    field(NELM, 4)
    field(INP,  "@asyn(${PREFIX}-${DEV}, 0) ChanMask")
    field(SCAN, "Passive")
}

record(waveform, "${PREFIX}:${DEV}:CHANMASK-RB") {
    field(DESC, "Channel mask")
    field(DTYP, "asynInt8ArrayIn")
    field(FTVL, "CHAR")
    field(NELM, 4)
    field(INP,  "@asyn(${PREFIX}-${DEV}, 0) ChanMask-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(longout, "${PREFIX}:${DEV}:TRIGLVL") {
    field(DESC, "Trigger level")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn(${PREFIX}-${DEV}, 0) TrigLevel")
    field(SCAN, "Passive")
}

record(longin, "${PREFIX}:${DEV}:TRIGLVL-RB") {
    field(DESC, "Trigger level readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(${PREFIX}-${DEV}, 0) TrigLevel-RB")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
}

record(mbbo, "${PREFIX}:${DEV}:TRIGEDGE") {
    field(DESC, "Trigger edge")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}, 0) TrigEdge")
    field(ZRVL, 0)
    field(ZRST, "Falling edge")
    field(ONVL, 1)
    field(ONST, "Rising edge")
}

record(mbbi, "${PREFIX}:${DEV}:TRIGEDGE-RB") {
    field(DESC, "Trigger edge readback")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(INP, "@asyn(${PREFIX}-${DEV}, 0) TrigEdge-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "Falling edge")
    field(ONVL, 1)
    field(ONST, "Rising edge")
}

#On ADQ7 only a single bit in the mask can be set, only one channel is allowed to at once generate the
#trigger. On ADQ14 only masks 1,2,4,8 (single bit) and masks 3 (A+B), 12 (C+D), 15 (A+B+C+D)
#are allowed.

record(mbbo, "${PREFIX}:${DEV}:TRIGCHAN") {
    field(DESC, "Trigger channel mask")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}, 0) TrigChan")
    field(ZRVL, 0)
    field(ZRST, "None")
    field(ONVL, 1)
    field(ONST, "A")
    field(TWVL, 2)
    field(TWST, "B")
    field(THVL, 3)
    field(THST, "C")
    field(FRVL, 4)
    field(FRST, "D")
    field(FVVL, 5)
    field(FVST, "A+B")
    field(SXVL, 6)
    field(SXST, "C+D")
    field(SVVL, 7)
    field(SVST, "A+B+C+D")
}

record(mbbi, "${PREFIX}:${DEV}:TRIGCHAN-RB") {
    field(DESC, "Trigger channel mask readback")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(INP, "@asyn(${PREFIX}-${DEV}, 0) TrigChan-RB")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ZRST, "None")
    field(ONVL, 1)
    field(ONST, "A")
    field(TWVL, 2)
    field(TWST, "B")
    field(THVL, 3)
    field(THST, "C")
    field(FRVL, 4)
    field(FRST, "D")
    field(FVVL, 5)
    field(FVST, "A+B")
    field(SXVL, 6)
    field(SXST, "C+D")
    field(SVVL, 7)
    field(SVST, "A+B+C+D")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#     StateMachine for Channel Group      #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(mbbo, "${PREFIX}:${DEV}:${GRP}:STAT") {
    field(DESC, "Set local state DEV")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) StateMachine-setState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
}

record(mbbi, "${PREFIX}:${DEV}:${GRP}:STAT-RB") {
    field(DESC, "Get local state DEV")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0) StateMachine-getState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(EISV, "MAJOR")
    field(FLNK, "${STAT_RB_FLNK=}")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#   Data and StateMachine for Channels    #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #

record(waveform, "${PREFIX}:${DEV}:${GRP}:${CH}:DATA") {
    field(DESC, "Received data")
    field(DTYP, "asynFloat64ArrayIn")
    field(FTVL, "DOUBLE")
    field(NELM, "30000000")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0)${CH}-Data")
}

#record(ai, "${PREFIX}:${DEV}:${GRP}:${CH}:DATA") {
#    field(DESC, "Received data")
#    field(DTYP, "asynFloat64")
#    field(SCAN, "I/O Intr")
#    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0)${CH}-Data")
#}

record(mbbo, "${PREFIX}:${DEV}:${GRP}:${CH}:STAT") {
    field(DESC, "Set local state CH")
    field(DTYP, "asynInt32")
    field(SCAN, "Passive")
    field(OUT, "@asyn(${PREFIX}-${DEV}-${GRP}, 0)${CH}-StateMachine-setState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
}

record(mbbi, "${PREFIX}:${DEV}:${GRP}:${CH}:STAT-RB") {
    field(DESC, "Get local state CH")
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(INP, "@asyn(${PREFIX}-${DEV}-${GRP}, 0)${CH}-StateMachine-getState")
    field(ZRVL, 0)
    field(ZRST, "UNKNOWN")
    field(ONVL, 1)
    field(ONST, "OFF")
    field(TWVL, 2)
    field(TWST, "SWITCHING_OFF")
    field(THVL, 3)
    field(THST, "INITIALIZING")
    field(FRVL, 4)
    field(FRST, "ON")
    field(FVVL, 5)
    field(FVST, "STOPPING")
    field(SXVL, 6)
    field(SXST, "STARTING")
    field(SVVL, 7)
    field(SVST, "RUNNING")
    field(EIVL, 8)
    field(EIST, "FAULT")
    field(EISV, "MAJOR")
}

# # # # # # # # # # # # # # # # # # # # # #
#                                         #
#       ADQ Specific StateMachine         #
#                                         #
# # # # # # # # # # # # # # # # # # # # # #
